name: Template for Go Format Check
description: |
  This workflow checks if Go files are properly formatted using `gofmt`.
  It's designed to be reusable across projects and runs on a self-hosted runner.

on:
  workflow_call:
    inputs:
      RUNNER_LABELS:
        description: "Labels for the self-hosted runner. Example: 'ubuntu', 'gpu', etc."
        required: true
        type: string

jobs:
  gofmt-check:
    name: Check Go Code Format
    runs-on: ${{ fromJson(format('["self-hosted", {0}]', inputs.RUNNER_LABELS)) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Run gofmt check
        id: gofmt
        run: |
          echo "üîç Checking formatting with gofmt..."
          UNFORMATTED=$(gofmt -l .)

          if [ -n "$UNFORMATTED" ]; then
            echo "üö® The following files are not properly formatted:"
            echo "$UNFORMATTED"

            # Write unformatted files to a file
            echo "$UNFORMATTED" > unformatted.txt

            echo "‚ùå Please run 'gofmt -w .' to fix formatting issues."
            exit 1
          fi

          echo "‚úÖ All Go files are properly formatted."

      - name: Upload unformatted files list (only if failed)
        if: failure() && steps.gofmt.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: unformatted-files
          path: unformatted.txt
